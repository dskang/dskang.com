function Point(t,e){this.x=t,this.y=e,this.intersects=function(t){return this.x===t.x&&this.y===t.y}}function Snake(){this.body=[],this.bodyColor="red",this.headColor="green",this.getHead=function(){return 0==this.body.length?null:this.body[this.body.length-1]},this.direction=null,this.directionQueue=[],this.numAdd=0,this.move=function(){if(this.directionQueue.length>0){var t=this.direction,e=this.directionQueue.shift();t===LEFT&&e===RIGHT||t===RIGHT&&e===LEFT||t===UP&&e===DOWN||t===DOWN&&e===UP||(this.direction=e)}var i=0,o=0;switch(this.direction){case UP:o=-kBoxSide;break;case RIGHT:i=kBoxSide;break;case DOWN:o=kBoxSide;break;case LEFT:i=-kBoxSide}var n=this.getHead(),a=new Point(n.x+i,n.y+o);if(this.isDead(a))gGameController.endGame();else{if(this.body.push(a),this.checkForFood(),this.numAdd>0)this.numAdd-=1;else{var r=this.body.shift();gDisplayManager.eraseBox(r)}this.draw()}},this.isDead=function(t){var e=t.x<0||t.y<kScoreHeight||t.x==kPixelWidth||t.y==kPixelHeight,i=this.contains(t);return e||i},this.checkForFood=function(){this.getHead().intersects(gFood.location)&&(this.numAdd+=kIncrement,gDisplayManager.eraseBox(gFood.location),gScoreboard.score+=1,gScoreboard.updateScore(),gFood.generate())},this.contains=function(t){for(var e=0;e<this.body.length;e++){var i=this.body[e];if(t.intersects(i))return!0}return!1},this.draw=function(){gDrawingContext.fillStyle=this.bodyColor;for(var t=0;t<this.body.length-1;t++)gDisplayManager.drawBox(this.body[t]);gDrawingContext.fillStyle=this.headColor,gDisplayManager.drawBox(this.getHead())}}function Food(){this.location=null,this.color="blue",this.generate=function(){var t=Math.floor(kPixelWidth/kBoxSide),e=Math.floor((kPixelHeight-kScoreHeight)/kBoxSide);do{var i=Math.floor(Math.random()*t),o=Math.floor(Math.random()*e),n=i*kBoxSide,a=kScoreHeight+o*kBoxSide,r=new Point(n,a)}while(gSnake.contains(r));this.location=r,this.draw()},this.draw=function(){gDrawingContext.fillStyle=this.color,gDisplayManager.drawBox(this.location)}}function GameController(){this.gameOver=!1,this.initGame=function(){gScoreboard=new Scoreboard,gCanvasElement=document.createElement("canvas"),gCanvasElement.id="canvas",document.body.appendChild(gCanvasElement),gCanvasElement.width=kPixelWidth,gCanvasElement.height=kPixelHeight,gTouchManager=new TouchManager,document.addEventListener("touchstart",gTouchManager.touchstart),document.addEventListener("touchmove",gTouchManager.touchmove),gKeyManager=new KeyManager,document.addEventListener("keydown",gKeyManager.keydown),gClickManager=new ClickManager,document.addEventListener("click",gClickManager.click),gDisplayManager=new DisplayManager,gDialogManager=new DialogManager,gDrawingContext=gCanvasElement.getContext("2d");var t=this;setInterval(function(){t.update()},kLoopInterval),this.newGame(),this.gameOver=!0,gDialogManager.showInstructions()},this.newGame=function(){gSnake=new Snake,gSnake.body.push(new Point(5*kBoxSide,kScoreHeight+5*kBoxSide)),gSnake.direction=RIGHT,gDisplayManager.drawBoard(),gSnake.draw(),gFood=new Food,gFood.generate(),gScoreboard.score=0,gScoreboard.updateScore(),this.gameOver=!1},this.update=function(){this.gameOver||gSnake.move()},this.endGame=function(){this.gameOver=!0;var t=gScoreboard.submitScore();gDialogManager.showFinalScore(t)}}function Scoreboard(){this.score=0,this.supportsLocalStorage="localStorage"in window&&null!==window.localStorage,this.storage=window.localStorage,this.getTopScore=function(){return this.supportsLocalStorage?"snake.top"in this.storage?this.storage["snake.top"]:0:null},this.submitScore=function(){return!!(this.supportsLocalStorage&&this.score>this.getTopScore())&&(this.storage["snake.top"]=this.score,!0)},this.updateScore=function(){gDrawingContext.clearRect(10,10,kPixelWidth,20),gDrawingContext.fillStyle="black",gDrawingContext.font="bold 20px sans-serif",gDrawingContext.textBaseline="top",gDrawingContext.textAlign="left",gDrawingContext.fillText("Score: "+this.score,10,10),this.supportsLocalStorage&&(gDrawingContext.textAlign="right",gDrawingContext.fillText("Top Score: "+this.getTopScore(),kPixelWidth-10,10))}}function DisplayManager(){this.drawBoard=function(){gDrawingContext.clearRect(0,0,kPixelWidth,kPixelHeight),gDrawingContext.beginPath();for(var t=0;t<=kPixelWidth;t+=kBoxSide)gDrawingContext.moveTo(t,kScoreHeight),gDrawingContext.lineTo(t,kPixelHeight);for(var e=kScoreHeight;e<=kPixelHeight;e+=kBoxSide)gDrawingContext.moveTo(0,e),gDrawingContext.lineTo(kPixelWidth,e);gDrawingContext.strokeStyle=kLineColor,gDrawingContext.stroke()},this.drawBox=function(t){gDrawingContext.fillRect(t.x,t.y,kBoxSide,kBoxSide)},this.eraseBox=function(t){gDrawingContext.strokeStyle=kLineColor,gDrawingContext.clearRect(t.x,t.y,kBoxSide,kBoxSide),gDrawingContext.strokeRect(t.x,t.y,kBoxSide,kBoxSide)}}function TouchManager(){this.oldPoint=null,this.touchstart=function(t){if(gTouchManager.oldPoint=gTouchManager.getCursorPosition(t),gGameController.gameOver){var e=gTouchManager.oldPoint.x,i=gTouchManager.oldPoint.y;gDialogManager.inPlayButton(e,i)&&gGameController.newGame()}},this.touchmove=function(t){var e=gTouchManager.getCursorPosition(t);if(null!==e){var i=e.x-gTouchManager.oldPoint.x,o=e.y-gTouchManager.oldPoint.y,n=Math.abs(i),a=Math.abs(o);if(!(n<kSwipeThreshold&&a<kSwipeThreshold)){var r=gTouchManager.getDirection(i,o);gSnake.directionQueue.length<kDirectionQueueLimit&&gSnake.directionQueue.push(r),gTouchManager.oldPoint=e}}},this.getDirection=function(t,e){return Math.abs(t)>Math.abs(e)?t>0?RIGHT:LEFT:e>0?DOWN:UP},this.getCursorPosition=function(t){return t.touches===undefined?null:new Point(t.touches[0].pageX,t.touches[0].pageY)}}function KeyManager(){this.keydown=function(t){var e=gKeyManager.getDirection(t.keyCode);null!==e&&gSnake.directionQueue.length<kDirectionQueueLimit&&gSnake.directionQueue.push(e)},this.getDirection=function(t){switch(t){case LEFT_KEYCODE:return LEFT;case UP_KEYCODE:return UP;case RIGHT_KEYCODE:return RIGHT;case DOWN_KEYCODE:return DOWN;default:return null}}}function ClickManager(){this.click=function(t){if(gGameController.gameOver){var e=t.clientX-gCanvasElement.offsetLeft,i=t.clientY-gCanvasElement.offsetTop;gDialogManager.inPlayButton(e,i)&&gGameController.newGame()}}}function DialogManager(){this.midCanvasX=kPixelWidth/2,this.midCanvasY=kPixelHeight/2,this.dialogWidth=300,this.dialogHeight=120,this.dialogCoord={xStart:this.midCanvasX-this.dialogWidth/2,yStart:this.midCanvasY-this.dialogHeight/2},this.playButtonWidth=200,this.playButtonHeight=40,this.playButtonCoord={xStart:this.midCanvasX-this.playButtonWidth/2,yStart:this.midCanvasY-this.playButtonHeight/2+15},this.showInstructions=function(){this.showDialog("Swipe or use arrow keys to turn","white","Play")},this.showFinalScore=function(t){var e,i;t?(e="New Top Score: ",i="red"):(e="Final Score: ",i="white"),this.showDialog(e+gScoreboard.score,i,"Play Again")},this.showDialog=function(t,e,i){gDrawingContext.fillStyle="black",gDrawingContext.fillRect(this.dialogCoord.xStart,this.dialogCoord.yStart,this.dialogWidth,this.dialogHeight),gDrawingContext.fillStyle="gray",gDrawingContext.fillRect(this.playButtonCoord.xStart,this.playButtonCoord.yStart,this.playButtonWidth,this.playButtonHeight),gDrawingContext.fillStyle=e,gDrawingContext.textBaseline="top",gDrawingContext.textAlign="center",gDrawingContext.font="bold 18px sans-serif",gDrawingContext.fillText(t,this.midCanvasX,this.midCanvasY-40),gDrawingContext.fillStyle="white",gDrawingContext.font="bold 16px sans-serif",gDrawingContext.fillText(i,this.midCanvasX,this.midCanvasY+6)},this.inPlayButton=function(t,e){var i=this.playButtonCoord.xStart,o=i+this.playButtonWidth,n=this.playButtonCoord.yStart,a=n+this.playButtonHeight;return t>i&&t<o&&e>n&&e<a}}var kPixelWidth,kPixelHeight,kPixelThreshold=600,kScoreHeight=40,kBoxSide=20,kLoopInterval=125,kLineColor="#ccc",kIncrement=3,kSwipeThreshold=20,kDirectionQueueLimit=2,gCanvasElement,gDrawingContext,gGameController,gTouchManager,gKeyManager,gClickManager,gDisplayManager,gDialogManager,gScoreboard,gSnake,gFood,LEFT_KEYCODE=37,UP_KEYCODE=38,RIGHT_KEYCODE=39,DOWN_KEYCODE=40,UP=0,RIGHT=1,DOWN=2,LEFT=3;window.onload=function(){kPixelWidth=document.documentElement.clientWidth,kPixelHeight=document.documentElement.clientHeight,kPixelWidth>kPixelThreshold&&kPixelHeight>kPixelThreshold&&(kPixelWidth=kPixelThreshold,kPixelHeight=kPixelThreshold),kPixelWidth=Math.floor(kPixelWidth/kBoxSide)*kBoxSide,kPixelHeight=Math.floor(kPixelHeight/kBoxSide)*kBoxSide,gGameController=new GameController,gGameController.initGame()};